#----------#
# Bindings #
#----------#

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Better splitting keys

unbind g
bind-key g split-window -h

unbind c
bind-key c split-window -v

# Reload config
bind-key r source-file ~/.config/tmux/tmux.conf

# Easier pane switching with Ctrl - home row keys
unbind n
bind n select-pane -L
unbind e
bind e select-pane -U
unbind i
bind i select-pane -D
unbind o
bind o select-pane -R

# Mouse mode
set -g mouse on

#---------#
# Options #
#---------#

# Delete the session when the last window is closed
# set -g detach-on-destroy on

# Longer history
set -g history-limit 100000

# Refresh status bar every 5 seconds
set -g status-interval 5

set -g default-terminal "screen-256color"

#------------#
# Status bar #
#------------#

# Basic options
set -g status-justify centre
set -g status-bg colour237
set -g status-fg colour15
set -g status-left-length 50
set -g status-right-length 50
set -g status-position top # because vim is on the bottom

# Main formatting strings
set -g status-left "#{@sis} #{T:@status-left-inner} #{@sms} #{T:@status-left-middle} #{@sos} #{T:@status-left-outer} "
set -g status-right "#{@sos} #{T:@status-right-outer} #{@sms} #{T:@status-right-middle} #{@sis} #{T:@status-right-inner} "

# Status bar styles
set -g @sos "#[bg=colour237,fg=colour15, nobold]" # status outer style
set -g @sms "#[bg=#504945, fg=#ebdbb2, nobold]" # status middle style
set -g @sis "#[bg=#a89984, fg=#282828, bold]" # status inner style

# Content
set -g @status-left-outer 'TODO'
set -g @status-left-middle '#{}'
set -g @status-left-inner '#{session_name}'
set -g @status-right-outer '#{T:@segment-git-all}'
set -g @status-right-middle '#{T:@segment-time}'
set -g @status-right-inner '#{T:@segment-who-and-where}'

set -g @segment-time "%H:%M"
set -g @segment-who-and-where "#(whoami)@#(hostname)"
# Git commands in a single segment
set -g @segment-git-all "#(cd #{pane_current_path}; [[ `git rev-parse --show-toplevel` ]] && echo -n 'îœ¥ ' && #{@command-git-branch} && #{@command-git-staged} && #{@command-git-unstaged})"
set -g @command-git-branch "git rev-parse --abbrev-ref HEAD | tr -d '\n'"
set -g @command-git-staged "git diff --staged --numstat | awk '{s+=$1} END {print s}' | sed 's/^/ +/g' | grep -E '.{3,}' | tr -d '\n'"
set -g @command-git-unstaged "git diff --numstat | awk '{s+=$1} END {print s}' | sed 's/^/ ~/g' | grep -E '.{3,}' | tr -d '\n'"

set -g set-titles-string "#{pane_title} "

